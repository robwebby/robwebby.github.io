View(GE_2015)
saveWidget(GE2015_Leaflet,file = "Election_2015.html")
GE_2017 <- read.csv("GE2017_Results.csv")
GE2017_WGS <- merge(Constituencies,GE_2017, by = "CODE")
Elec17pal <- colorFactor(c("darkblue","chartreuse","firebrick2","goldenrod3","dimgrey","darkgreen","gold","darkorchid1"), GE2017_WGS$Winner.17)
labelelec2017 <- sprintf(
"<strong>%s 2015 </strong><br/> Lab Vote Share <strong> %g  (%g) </strong> <br /> Con Vote Share <strong> %g (%g) </strong> <br />Lib Dem Vote Share <strong> %g  (%g)</strong> <br />UKIP Vote Share <strong> %g (%g) </strong> <br />SNP Vote Share <strong> %g (%g) </strong> <br />Green Vote Share <strong> %g (%g) </strong> <br />Other Vote Share <strong> %g (%g) </strong> <br />", GE2017_WGS$NAME,GE2017_WGS$Labour.Vote.Share.17,GE2017_WGS$Labour.Vote.Share.Change,GE2017_WGS$Conservative.Vote.Share.17,GE2017_WGS$Conservative.Vote.Share.Change,GE2017_WGS$Lib.Dems.Vote.Share.17,GE2017_WGS$Lib.Dems.Vote.Share.Change.17,GE2017_WGS$UKIP.Vote.Share.17,GE2017_WGS$UKIP.Vote.Share.Change.17,GE2017_WGS$SNP.Vote.Share.17,GE2017_WGS$SNP.Vote.Share.Change.17,GE2017_WGS$Green.Vote.Share.17,GE2017_WGS$Green.Vote.Share.Change,GE2017_WGS$Other.Vote.Share.17,GE2017_WGS$Other.Vote.Share.Change.17
) %>% lapply(htmltools::HTML)
GE2017_Leaflet <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~Elec17pal(Winner.17),
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labelelec2017,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "1px 1px"),
textsize = "9px",
direction = "auto", group = "Election 17")
) %>% addLegend("bottomright", pal = Elec17pal, values = ~Winner.17,
title = "Winner GE 2017",
labFormat = labelFormat(prefix = ""),
opacity = 1)
GE2017_Leaflet
GE_2017 <- read.csv("GE2017_Results.csv")
GE2017_WGS <- merge(Constituencies,GE_2017, by = "CODE")
GE2017_Leaflet <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~Elec17pal(Winner.17),
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labelelec2017,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "1px 1px"),
textsize = "9px",
direction = "auto", group = "Election 17")
) %>% addLegend("bottomright", pal = Elec17pal, values = ~Winner.17,
title = "Winner GE 2017",
labFormat = labelFormat(prefix = ""),
opacity = 1)
GE2017_Leaflet
saveWidget(GE2017_Leaflet,file = "Election_2017.html")
GE2015_Leaflet
library(shiny)
library(shiny)
runExample("01_hello")
shiny::runApp('~/Documents/Leicester Uni/Shiny/Voteshare-app')
GE_2015 <- read.csv("GE2015_Results.csv")
GE_2015_VS <- GE_2015[,c(2,28:35)]
Con_Data <- GE_2015_VS[,-1]
rownames(Con_Data) <- GE_2015_VS[,1]
VoteShare <- function(Data,Constituency){
GE_2015_VS <- Data[,c(2,28:35)]
Party_Names <- c("Conservative","Green","Labour","Lib Dem","Other","Plaid","SNP","UKIP")
Constituency <- as.character(Constituency)
colnames(GE_2015_VS)
Constituency <- GE_2015_VS[ which(GE_2015_VS$Constituency.Name==Constituency),]
samp2 <- Constituency[,-1]
rownames(samp2) <- Constituency[,1]
sampe2t <- t(samp2)
Graph <-  barplot(sampe2t, main="Vote share change by party",
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, xlim = c(1,8),ylim = c(-100,100)
)
return(Graph)
}
runApp('~/Documents/Leicester Uni/Shiny/Voteshare-app')
Party_Col <- c("darkblue","green","red","gold","grey","darkgreen","yellow","purple")
VoteShare <- function(Data,Constituency){
GE_2015_VS <- Data[,c(2,28:35)]
Party_Names <- c("Conservative","Green","Labour","Lib Dem","Other","Plaid","SNP","UKIP")
Constituency <- as.character(Constituency)
colnames(GE_2015_VS)
Constituency <- GE_2015_VS[ which(GE_2015_VS$Constituency.Name==Constituency),]
samp2 <- Constituency[,-1]
rownames(samp2) <- Constituency[,1]
sampe2t <- t(samp2)
Graph <-  barplot(sampe2t, main="Vote share change by party",
col=Party_Col, beside=TRUE, xlim = c(1,8),ylim = c(-100,100)
)
return(Graph)
}
runApp('~/Documents/Leicester Uni/Shiny/Voteshare-app')
library(shiny)
library(rsconnect)
setwd("~/Documents/Leicester Uni/Shiny/Voteshare-app")
deployApp(getwd())
deployApp(getwd())
runApp()
runApp()
terminateApp("Voteshare-app")
?terminateApp
terminateApp("Voteshare-app",)
?dev.print
setwd("~/Documents/GitHub/robwebby.github.io/2015_VSC_Plots")
setwd("~/Documents/GitHub/robwebby.github.io")
GE_2015 <- read.csv("GE2015_Results.csv")
Party_Names <- c("Con","Green","Labour","Lib Dem","Other","Plaid","SNP","UKIP")
GE_2015_VS <- GE_2015[,c(2,20:27)]
Con_Names <- as.data.frame(GE_2015$Constituency.Name)
Con_Data_VS <- GE_2015_VS[,-1]
rownames(Con_Data_VS) <- GE_2015_VS[,1]
GE_2015_VSC <- GE_2015[,c(2,28:35)]
Con_Data_VSC <- GE_2015_VSC[,-1]
rownames(Con_Data_VSC) <- GE_2015_VSC[,1]
setwd("~/Documents/GitHub/robwebby.github.io/2015_VSC_Plots")
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
IndCon_Data_VS <- Con_Data_VS[Constituencyinput,]
IndCon_Data_VS <- as.matrix.data.frame(IndCon_Data_VS)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
ylim_VS <- c(min(t(IndCon_Data_VS)),max(t(IndCon_Data_VS)))
Constituency <- as.character(Con_Names[Constituencyinput,])
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
setwd("~/Documents/GitHub/robwebby.github.io/2015_VSC_Plots")
dev.print(png, paste(Constituency,"_VSC2015.png", sep = ""), width = 448, height = 356)
VS_Plot <- barplot(IndCon_Data_VS, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VS, cex.sub = 1, font.sub = 4
,las=2)
setwd("~/Documents/GitHub/robwebby.github.io/2015_VS_Plots")
dev.print(png, paste(Constituency,"_VS2015.png", sep = ""), width = 448, height = 356)
#pie
par(srt=0)
VS_Plot_pie <- pie(IndCon_Data_VS, main= Constituency,labels = paste(Party_Names,IndCon_Data_VSC,"%",sep = " "),
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"),cex = .5 )
setwd("~/Documents/GitHub/robwebby.github.io/2015_VSC_Plots_Pie")
dev.print(png, paste(Constituency,"_VS2015_pie.png", sep = ""), width = 448, height = 356)
}
setwd("~/Documents/GitHub/robwebby.github.io")
GE_2017 <- read.csv("GE2017_Results.csv")
Party_Names <- c("Con","Green","Labour","Lib Dem","Other","Plaid","SNP","UKIP")
GE_2017_VS <- GE_2017[,c(2,20:27)]
Con_Names <- as.data.frame(GE_2017$Constituency.Name)
Con_Data_VS <- GE_2017_VS[,-1]
rownames(Con_Data_VS) <- GE_2017_VS[,1]
GE_2017_VSC <- GE_2017[,c(2,28:35)]
Con_Data_VSC <- GE_2017_VSC[,-1]
rownames(Con_Data_VSC) <- GE_2017_VSC[,1]
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
VS_Plot <- barplot(IndCon_Data_VS, main= paste(Constituency,"NOT CALLED",sep = " "),
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VS, cex.sub = 1, font.sub = 4
,las=2)
setwd("~/Documents/GitHub/robwebby.github.io/2017_VS_Plots")
dev.print(png, paste(Constituency,"_VS2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
VS_Plot <- barplot(IndCon_Data_VS, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VS, cex.sub = 1, font.sub = 4
,las=2)
setwd("~/Documents/GitHub/robwebby.github.io/2017_VS_Plots")
dev.print(png, paste(Constituency,"_VS2017.png", sep = ""), width = 448, height = 356)
}}
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
VS_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " "),
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VS, cex.sub = 1, font.sub = 4
,las=2)
setwd("~/Documents/GitHub/robwebby.github.io/2017_VS_Plots")
dev.print(png, paste(Constituency,"_VS2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
VS_Plot <- barplot(IndCon_Data_VS, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VS, cex.sub = 1, font.sub = 4
,las=2)
setwd("~/Documents/GitHub/robwebby.github.io/2017_VS_Plots")
dev.print(png, paste(Constituency,"_VS2017.png", sep = ""), width = 448, height = 356)
}}
setwd("~/Documents/GitHub/robwebby.github.io")
setwd("~/Documents/GitHub/robwebby.github.io")
library(sp)
library(rgdal)
library(raster)
library(plyr)
library(rgeos)
library(leaflet)
library(rmapshaper)
library(htmlwidgets)
setwd("~/Documents/GitHub/robwebby.github.io")
Constituencies <- readOGR("Constituencies_Simp.shp")
GE_2017 <- read.csv("GE2017_Results.csv")
latlong = "+init=epsg:4326"
GE2017_WGS <- merge(Constituencies,GE_2017, by = "CODE")
Elec17pal <- colorFactor(c("darkblue","chartreuse","firebrick2","goldenrod3","dimgrey","darkgreen","gold","darkorchid1"), GE2017_WGS$Winner.17)
labelelec2017 <- sprintf(
"<strong>%s 2017 </strong><br/> Lab Vote Share <strong> %g  (%g) </strong> <br /> Con Vote Share <strong> %g (%g) </strong> <br />Lib Dem Vote Share <strong> %g  (%g)</strong> <br />UKIP Vote Share <strong> %g (%g) </strong> <br />SNP Vote Share <strong> %g (%g) </strong> <br />Green Vote Share <strong> %g (%g) </strong> <br />Other Vote Share <strong> %g (%g) </strong> <br />", GE2017_WGS$NAME,GE2017_WGS$Labour.Vote.Share.17,GE2017_WGS$Labour.Vote.Share.Change.17,GE2017_WGS$Conservative.Vote.Share.17,GE2017_WGS$Conservative.Vote.Share.Change.17,GE2017_WGS$Lib.Dems.Vote.Share.17,GE2017_WGS$Lib.Dems.Vote.Share.Change.17,GE2017_WGS$UKIP.Vote.Share.17,GE2017_WGS$UKIP.Vote.Share.Change.17,GE2017_WGS$SNP.Vote.Share.17,GE2017_WGS$SNP.Vote.Share.Change.17,GE2017_WGS$Green.Vote.Share.17,GE2017_WGS$Green.Vote.Share.Change.17,GE2017_WGS$Other.Vote.Share.17,GE2017_WGS$Other.Vote.Share.Change.17
) %>% lapply(htmltools::HTML)
GE2017_Leaflet <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~Elec17pal(Winner.17),
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labelelec2017,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "1px 1px"),
textsize = "9px",
direction = "auto", group = "Election 17")
) %>% addLegend("bottomright", pal = Elec17pal, values = ~Winner.17,
title = "Winner GE 2017",
labFormat = labelFormat(prefix = ""),
opacity = 1)
GE2017_Leaflet <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06
)
GE2017_Leaflet
GE2017_Leaflet
GE2017_Leaflet <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = FALSE, smoothFactor = 0.2, fillOpacity = 1,
color = ~Elec17pal(Winner.17),
highlight = highlightOptions(
weight = 5,
color = "#666",
dashArray = "",
fillOpacity = 0.7,
bringToFront = TRUE),
label = labelelec2017,
labelOptions = labelOptions(
style = list("font-weight" = "normal", padding = "1px 1px"),
textsize = "9px",
direction = "auto", group = "Election 17")
)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons()
Election
?stroke
??stroke
?addPolygons
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(layerId = "Election_17",
stroke = TRUE,color = ~Elec17pal(Winner.17)
)
Election
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(
stroke = TRUE,color = ~Elec17pal(Winner.17)
)
Election
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(layerId = "Election_17",
stroke = TRUE,color = ~Elec17pal(Winner.17)
)
Election
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17)
)
Election
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,5"
)
Election
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1"
)
Election
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = labelelec2017
)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = labelelec2017
)
labelelec2017 <- sprintf(
"<strong>%s 2017 </strong><br/> Lab Vote Share <strong> %g  (%g) </strong> <br /> Con Vote Share <strong> %g (%g) </strong> <br />Lib Dem Vote Share <strong> %g  (%g)</strong> <br />UKIP Vote Share <strong> %g (%g) </strong> <br />SNP Vote Share <strong> %g (%g) </strong> <br /> Green Vote Share <strong> %g (%g) </strong><br />Plaid Vote Share <strong> %g (%g) </strong> <br />Other Vote Share <strong> %g (%g) </strong> <br />", GE2017_WGS$NAME,GE2017_WGS$Labour.Vote.Share.17,GE2017_WGS$Labour.Vote.Share.Change.17,GE2017_WGS$Conservative.Vote.Share.17,GE2017_WGS$Conservative.Vote.Share.Change.17,GE2017_WGS$Lib.Dems.Vote.Share.17,GE2017_WGS$Lib.Dems.Vote.Share.Change.17,GE2017_WGS$UKIP.Vote.Share.17,GE2017_WGS$UKIP.Vote.Share.Change.17,GE2017_WGS$SNP.Vote.Share.17,GE2017_WGS$SNP.Vote.Share.Change.17,GE2017_WGS$Green.Vote.Share.17,GE2017_WGS$Green.Vote.Share.Change.17,GE2017_WGS$Plaid.Vote.Share.17,GE2017_WGS$Plaid.Vote.Share.Change.17,GE2017_WGS$Other.Vote.Share.17,GE2017_WGS$Other.Vote.Share.Change.17
) %>% lapply(htmltools::HTML)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = labelelec2017
)
eleclabel <- sprintf(
"<strong>%s 2017</strong><br/>Lab Vote Share<strong>%g (%g)</strong><br/>Conservative Vote Share<strong>%g (%g)</strong> Lib Dem Vote Share<strong>%g (%g)</strong><br/>UKIP Vote Share<strong>%g (%g)</strong><br/>SNP Vote Share<strong>%g (%g)</strong><br/>Green Vote Share<strong>%g (%g)</strong><br/>Plaid Vote Share<strong>%g (%g)</strong><br/>Other Vote Share<strong>%g (%g)</strong><br/>",
GE2017_WGS$NAME,GE2017_WGS$Labour.Vote.Share.17,GE2017_WGS$Labour.Vote.Share.Change,GE2017_WGS$Conservative.Vote.Share.17,GE2017_WGS$Conservative.Vote.Share.Change,GE2017_WGS$Lib.Dems.Vote.Share.17,GE2017_WGS$Lib.Dems.Vote.Share.Change.17,GE2017_WGS$UKIP.Vote.Share.17,GE2017_WGS$UKIP.Vote.Share.Change.17,GE2017_WGS$SNP.Vote.Share.17,GE2017_WGS$SNP.Vote.Share.Change.17,GE2017_WGS$Green.Vote.Share.17,GE2017_WGS$Green.Vote.Share.Change,GE2017_WGS$Plaid.Vote.Share.17,GE2017_WGS$Plaid.Vote.Share.Change.17,GE2017_WGS$Other.Vote.Share.17,GE2017_WGS$Other.Vote.Share.Change.17
)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
)
Election
eleclabel <- sprintf(
"<p><strong>%s 2017</strong><br/>Lab Vote Share<strong>%g (%g)</strong><br/>Conservative Vote Share<strong>%g (%g)</strong> Lib Dem Vote Share<strong>%g (%g)</strong><br/>UKIP Vote Share<strong>%g (%g)</strong><br/>SNP Vote Share<strong>%g (%g)</strong><br/>Green Vote Share<strong>%g (%g)</strong><br/>Plaid Vote Share<strong>%g (%g)</strong><br/>Other Vote Share<strong>%g (%g)</strong><p/>",
GE2017_WGS$NAME,GE2017_WGS$Labour.Vote.Share.17,GE2017_WGS$Labour.Vote.Share.Change,GE2017_WGS$Conservative.Vote.Share.17,GE2017_WGS$Conservative.Vote.Share.Change,GE2017_WGS$Lib.Dems.Vote.Share.17,GE2017_WGS$Lib.Dems.Vote.Share.Change.17,GE2017_WGS$UKIP.Vote.Share.17,GE2017_WGS$UKIP.Vote.Share.Change.17,GE2017_WGS$SNP.Vote.Share.17,GE2017_WGS$SNP.Vote.Share.Change.17,GE2017_WGS$Green.Vote.Share.17,GE2017_WGS$Green.Vote.Share.Change,GE2017_WGS$Plaid.Vote.Share.17,GE2017_WGS$Plaid.Vote.Share.Change.17,GE2017_WGS$Other.Vote.Share.17,GE2017_WGS$Other.Vote.Share.Change.17
)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
)
Election
eleclabel <- sprintf(
"<strong>%s</strong><br/>Lab Vote Share<strong>%g (%g)</strong><br/>Conservative Vote Share<strong>%g (%g)</strong> Lib Dem Vote Share<strong>%g (%g)</strong><br/>UKIP Vote Share<strong>%g (%g)</strong><br/>SNP Vote Share<strong>%g (%g)</strong><br/>Green Vote Share<strong>%g (%g)</strong><br/>Plaid Vote Share<strong>%g (%g)</strong><br/>Other Vote Share<strong>%g (%g)</strong>",
GE2017_WGS$NAME,GE2017_WGS$Labour.Vote.Share.17,GE2017_WGS$Labour.Vote.Share.Change,GE2017_WGS$Conservative.Vote.Share.17,GE2017_WGS$Conservative.Vote.Share.Change,GE2017_WGS$Lib.Dems.Vote.Share.17,GE2017_WGS$Lib.Dems.Vote.Share.Change.17,GE2017_WGS$UKIP.Vote.Share.17,GE2017_WGS$UKIP.Vote.Share.Change.17,GE2017_WGS$SNP.Vote.Share.17,GE2017_WGS$SNP.Vote.Share.Change.17,GE2017_WGS$Green.Vote.Share.17,GE2017_WGS$Green.Vote.Share.Change,GE2017_WGS$Plaid.Vote.Share.17,GE2017_WGS$Plaid.Vote.Share.Change.17,GE2017_WGS$Other.Vote.Share.17,GE2017_WGS$Other.Vote.Share.Change.17
)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
)
Election
labelelec2017 <- sprintf(
"<strong>%s 2017 </strong><br/>Lab Vote Share <strong>%g  (%g)</strong><br/> Con Vote Share<strong>%g (%g)</strong><br/>Lib Dem Vote Share<strong>%g (%g)</strong><br/>UKIP Vote Share <strong>%g (%g)</strong><br/>SNP Vote Share<strong>%g (%g)</strong><br/>Green Vote Share<strong>%g (%g)</strong><br/>Plaid Vote Share<strong>%g (%g)</strong><br/>Other Vote Share<strong>%g (%g)</strong><br/>",GE2017_WGS$NAME,GE2017_WGS$Labour.Vote.Share.17,GE2017_WGS$Labour.Vote.Share.Change.17,GE2017_WGS$Conservative.Vote.Share.17,GE2017_WGS$Conservative.Vote.Share.Change.17,GE2017_WGS$Lib.Dems.Vote.Share.17,GE2017_WGS$Lib.Dems.Vote.Share.Change.17,GE2017_WGS$UKIP.Vote.Share.17,GE2017_WGS$UKIP.Vote.Share.Change.17,GE2017_WGS$SNP.Vote.Share.17,GE2017_WGS$SNP.Vote.Share.Change.17,GE2017_WGS$Green.Vote.Share.17,GE2017_WGS$Green.Vote.Share.Change.17,GE2017_WGS$Plaid.Vote.Share.17,GE2017_WGS$Plaid.Vote.Share.Change.17,GE2017_WGS$Other.Vote.Share.17,GE2017_WGS$Other.Vote.Share.Change.17
) %>% lapply(htmltools::HTML)
eleclabel <- sprintf(
"<strong>%s</strong><br/>Lab Vote Share<strong>%g (%g)</strong><br/>Conservative Vote Share<strong>%g (%g)</strong> Lib Dem Vote Share<strong>%g (%g)</strong><br/>UKIP Vote Share<strong>%g (%g)</strong><br/>SNP Vote Share<strong>%g (%g)</strong><br/>Green Vote Share<strong>%g (%g)</strong><br/>Plaid Vote Share<strong>%g (%g)</strong><br/>Other Vote Share<strong>%g (%g)</strong>",
GE2017_WGS$NAME,GE2017_WGS$Labour.Vote.Share.17,GE2017_WGS$Labour.Vote.Share.Change,GE2017_WGS$Conservative.Vote.Share.17,GE2017_WGS$Conservative.Vote.Share.Change,GE2017_WGS$Lib.Dems.Vote.Share.17,GE2017_WGS$Lib.Dems.Vote.Share.Change.17,GE2017_WGS$UKIP.Vote.Share.17,GE2017_WGS$UKIP.Vote.Share.Change.17,GE2017_WGS$SNP.Vote.Share.17,GE2017_WGS$SNP.Vote.Share.Change.17,GE2017_WGS$Green.Vote.Share.17,GE2017_WGS$Green.Vote.Share.Change,GE2017_WGS$Plaid.Vote.Share.17,GE2017_WGS$Plaid.Vote.Share.Change.17,GE2017_WGS$Other.Vote.Share.17,GE2017_WGS$Other.Vote.Share.Change.17
)
Election
eleclabel <- sprintf(
"<strong>%s</strong><br/> Lab Vote Share <strong> %g </strong> <br /> Con Vote Share <strong> %g </strong> <br />Lib Dem Vote Share <strong> %g </strong> <br />UKIP Vote Share <strong> %g </strong> <br />SNP Vote Share <strong> %g </strong> <br />Green Vote Share <strong> %g </strong> <br />Other Vote Share <strong> %g </strong> <br />", GE2017_WGS$NAME,GE2017_WGS$Labour.Vote.Share.15,GE2017_WGS$Conservative.Vote.Share.15,GE2017_WGS$Lib.Dems.Vote.Share.15,GE2017_WGS$UKIP.Vote.Share.15,GE2017_WGS$SNP.Vote.Share.15,GE2017_WGS$Green.Vote.Share.15,GE2017_WGS$Other.Vote.Share.15
) %>% lapply(htmltools::HTML)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
)
eleclabel <- sprintf(
"<strong>%s</strong><br/>", GE2017_WGS$NAME
) %>% lapply(htmltools::HTML)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
)
Election
?gsub
eleclabel <- sprintf(
"<strong>%s</strong><br/>", GE2017_WGS$Constituency.Name
) %>% lapply(htmltools::HTML)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
)
Election
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
)  ) %>%
addLegend("bottomright", pal = Elec17pal, values = ~Winner.17,
title = "Winner GE 2017",
labFormat = labelFormat(prefix = ""),
opacity = 1)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
)  ) %>%
addLegend("bottomright", pal = Elec17pal, values = ~Winner.17,
title = "Winner GE 2017",
labFormat = labelFormat(prefix = ""),
opacity = 1)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
) %>%
addLegend("bottomright", pal = Elec17pal, values = ~Winner.17,
title = "Winner GE 2017",
labFormat = labelFormat(prefix = ""),
opacity = 1)
Election
factor(GE_2017$Winner.17)
GE_2017 <- gsub("#N/A","Not Called",GE_2017$Winner.17)
factor(GE_2017$Winner.17)
GE_2017 <- read.csv("GE2017_Results.csv")
GE_2017$Winner.17[GE_2017$Winner.17=="#N/A"] <- "Result not called"
GE_2017 <- read.csv("GE2017_Results.csv")
GE_2017$Winner.17[GE_2017$Winner.17=="#N/A"] <- "Result not called"
GE_2017$Winner.17
GE_2017$Winner.17 <- as.factor(GE_2017$Winner.17)
GE_2017$Winner.17
GE_2017 <- read.csv("GE2017_Results.csv")
GE_2017$Winner.17
colnames(GE_2017)
GE_2017$Electorate.17
GE_2017$Green.17
colnames(GE_2017)
GE_2017[,][is.na(x[, 15:18])] <- "Awaiting Result"
GE_2017[,][is.na(GE_2017[, 15:18])] <- "Awaiting Result"
GE_2017[,15:18][is.na(GE_2017[, 15:18])] <- "Awaiting Result"
factor(GE_2017$SNP.Vote.Share.Change.17)
factor(GE_2017$Winner.17)
GE_2017 <- read.csv("GE2017_Results.csv")
latlong = "+init=epsg:4326"
GE2017_WGS <- merge(Constituencies,GE_2017, by = "CODE")
Elec17pal <- colorFactor(c("darkblue","chartreuse","firebrick2","goldenrod3","dimgrey","darkgreen","gold","darkorchid1"), GE2017_WGS$Winner.17)
eleclabel <- sprintf(
"<strong>%s</strong><br/>", GE2017_WGS$Constituency.Name
) %>% lapply(htmltools::HTML)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
) %>%
addLegend("bottomright", pal = Elec17pal, values = ~Winner.17,
title = "Winner GE 2017",
labFormat = labelFormat(prefix = ""),
opacity = 1)
Election
Elec17pal <- colorFactor(c("darkblue","chartreuse","firebrick2","goldenrod3","dimgrey","darkgreen","gold","darkorchid1"), GE2017_WGS$Winner.17)
eleclabel <- sprintf(
"<strong>%s</strong><br/>", GE2017_WGS$Constituency.Name
) %>% lapply(htmltools::HTML)
Election <- leaflet(GE2017_WGS) %>%
addTiles(group = "OSM (default)") %>%
fitBounds(-14.02,49.67,2.09,61.06) %>%
addPolygons(stroke = TRUE,color = ~Elec17pal(Winner.17),
dashArray = "5,1", label = eleclabel
) %>%
addLegend("bottomright", pal = Elec17pal, values = ~Winner.17,
title = "Winner GE 2017",
labFormat = labelFormat(prefix = ""),
opacity = 1)
Election
View(GE_2017[1:7])
View(GE_2017[,1:7])
View(GE_2017[1:7,])
