IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
IndCon_Data_VS <- Con_Data_VS[Constituencyinput,]
IndCon_Data_VS <- as.matrix.data.frame(IndCon_Data_VS)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
max(ylim_VSC)
IndCon_Data_VS
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- 1
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
IndCon_Data_VS <- Con_Data_VS[Constituencyinput,]
IndCon_Data_VS <- as.matrix.data.frame(IndCon_Data_VS)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
ylim_VS <- c(min(t(IndCon_Data_VS)),max(t(IndCon_Data_VS)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VS)<=0) {
png(paste(Constituency,"_VSC2017.png", sep = ""))
png(paste(Constituency,"_VS2017.png", sep = ""))
png(paste(Constituency,"_VS2017_pie.png", sep = ""))
print(paste(Constituency,"Not Called", sep = ""))
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
VS_Plot <- barplot(IndCon_Data_VS, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VS, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VS2017.png", sep = ""), width = 448, height = 356)
#pie
par(srt=0)
VS_Plot_pie <- pie(IndCon_Data_VS, main= Constituency,labels = paste(Party_Names,IndCon_Data_VSC,"%",sep = " "),
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"),cex = .5 )
dev.print(png, paste(Constituency,"_VS2017_pie.png", sep = ""), width = 448, height = 356)
}
}
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
IndCon_Data_VS <- Con_Data_VS[Constituencyinput,]
IndCon_Data_VS <- as.matrix.data.frame(IndCon_Data_VS)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
ylim_VS <- c(min(t(IndCon_Data_VS)),max(t(IndCon_Data_VS)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VS)<=0) {
png(paste(Constituency,"_VSC2017.png", sep = ""))
png(paste(Constituency,"_VS2017.png", sep = ""))
png(paste(Constituency,"_VS2017_pie.png", sep = ""))
print(paste(Constituency,"Not Called", sep = ""))
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
VS_Plot <- barplot(IndCon_Data_VS, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VS, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VS2017.png", sep = ""), width = 448, height = 356)
#pie
par(srt=0)
VS_Plot_pie <- pie(IndCon_Data_VS, main= Constituency,labels = paste(Party_Names,IndCon_Data_VSC,"%",sep = " "),
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"),cex = .5 )
dev.print(png, paste(Constituency,"_VS2017_pie.png", sep = ""), width = 448, height = 356)
}
}
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
IndCon_Data_VS <- Con_Data_VS[Constituencyinput,]
IndCon_Data_VS <- as.matrix.data.frame(IndCon_Data_VS)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
ylim_VS <- c(min(t(IndCon_Data_VS)),max(t(IndCon_Data_VS)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VS)<=0) {
png(paste(Constituency,"_VSC2017.png", sep = ""))
png(paste(Constituency,"_VS2017.png", sep = ""))
png(paste(Constituency,"_VS2017_pie.png", sep = ""))
print(paste(Constituency,"Not Called", sep = ""))
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
VS_Plot <- barplot(IndCon_Data_VS, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VS, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VS2017.png", sep = ""), width = 448, height = 356)
#pie
par(srt=0)
VS_Plot_pie <- pie(IndCon_Data_VS, main= Constituency,labels = paste(Party_Names,IndCon_Data_VSC,"%",sep = " "),
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"),cex = .5 )
dev.print(png, paste(Constituency,"_VS2017_pie.png", sep = ""), width = 448, height = 356)
}
}
library(png)
setwd("~/Documents/GitHub/robwebby.github.io")
GE_2017 <- read.csv("GE2017_Results.csv")
Party_Names <- c("Con","Green","Labour","Lib Dem","Other","Plaid","SNP","UKIP")
GE_2017_VS <- GE_2017[,c(2,20:27)]
Con_Names <- as.data.frame(GE_2017$Constituency.Name)
Con_Data_VS <- GE_2017_VS[,-1]
rownames(Con_Data_VS) <- GE_2017_VS[,1]
GE_2017_VSC <- GE_2017[,c(2,28:35)]
Con_Data_VSC <- GE_2017_VSC[,-1]
rownames(Con_Data_VSC) <- GE_2017_VSC[,1]
no_results <- readPNG("awaiting_results.png")
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
IndCon_Data_VS <- Con_Data_VS[Constituencyinput,]
IndCon_Data_VS <- as.matrix.data.frame(IndCon_Data_VS)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
ylim_VS <- c(min(t(IndCon_Data_VS)),max(t(IndCon_Data_VS)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VS)<=0) {
png(paste(Constituency,"_VSC2017.png", sep = ""))
png(paste(Constituency,"_VS2017.png", sep = ""))
png(paste(Constituency,"_VS2017_pie.png", sep = ""))
print(paste(Constituency,"Not Called", sep = ""))
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
VS_Plot <- barplot(IndCon_Data_VS, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VS, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VS2017.png", sep = ""), width = 448, height = 356)
#pie
par(srt=0)
VS_Plot_pie <- pie(IndCon_Data_VS, main= Constituency,labels = paste(Party_Names,IndCon_Data_VSC,"%",sep = " "),
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"),cex = .5 )
dev.print(png, paste(Constituency,"_VS2017_pie.png", sep = ""), width = 448, height = 356)
}
}
?png
no_results
plot(no_results)
View(no_results)
rasterImage(no_results)
png(no_results)
grid::grid.raster(png)
grid::grid.raster(no_results)
rasterImage(no_results,0,0,1,1)
plot(rasterImage(no_results,0,0,1,1))
rasterImage(no_results,0,0,1,1)
setwd("~/Documents/GitHub/robwebby.github.io")
GE_2017 <- read.csv("GE2017_Results.csv")
Party_Names <- c("Con","Green","Labour","Lib Dem","Other","Plaid","SNP","UKIP")
GE_2017_VS <- GE_2017[,c(2,20:27)]
Con_Names <- as.data.frame(GE_2017$Constituency.Name)
Con_Data_VS <- GE_2017_VS[,-1]
rownames(Con_Data_VS) <- GE_2017_VS[,1]
GE_2017_VSC <- GE_2017[,c(2,28:35)]
Con_Data_VSC <- GE_2017_VSC[,-1]
rownames(Con_Data_VSC) <- GE_2017_VSC[,1]
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VS)<=0) {
png(paste(Constituency,"_VSC2017.png", sep = ""))
print(paste(Constituency,"Not Called", sep = ""))
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }
)
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VS)<=0) {
png(paste(Constituency,"_VSC2017.png", sep = ""))
print(paste(Constituency,"Not Called", sep = ""))
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VS)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
install.packages("imager")
library(png)
library(imager)
library(png)
library(imager)
no_results <- readPNG("awaiting_results.png")
typeof(no_results)
?save.image
file <- system.file('awaiting_results.png',package='imager')
no_results <- load.image(file)
file <- system.file('awaiting_results.png',package='imager')
no_results <- load.image(file)
setwd("~/Documents/GitHub/robwebby.github.io")
file <- system.file('awaiting_results.png',package='imager')
no_results <- load.image(file)
file <- system.file("awaiting_results.png",package='imager')
no_results <- load.image(file)
setwd("~/Documents/GitHub/robwebby.github.io")
file <- system.file("awaiting_results.png",package='imager')
no_results <- load.image(file)
typeof(file)
KCACO <- system.file("keep-calm-and-results-will-arrive.jpg,package='imager")
load.image(file)
load.image("keep-calm-and-results-will-arrive.jpg")
library(jpeg)
img <- readJPEG("keep-calm-and-results-will-arrive.jpg")
img <- readJPEG(system.file("keep-calm-and-results-will-arrive.jpg",package="jpeg")
))
img <- readJPEG(system.file("keep-calm-and-results-will-arrive.jpg",package="jpeg"))
img <- readJPEG(system.file("keep-calm-and-results-will-arrive.jpg",package="jpeg"))
img <- readJPEG(system.file("img",keep-calm-and-results-will-arrive.jpg",package="jpeg"))
img <- readJPEG(system.file("img",keep-calm-and-results-will-arrive.jpg",package= "jpeg"), TRUE)
img <- readJPEG(system.file(keep-calm-and-results-will-arrive.jpg",package= "jpeg"), TRUE)
setwd("~/Documents/GitHub/robwebby.github.io")
GE_2017 <- read.csv("GE2017_Results.csv")
Party_Names <- c("Con","Green","Labour","Lib Dem","Other","Plaid","SNP","UKIP")
GE_2017_VS <- GE_2017[,c(2,20:27)]
Con_Names <- as.data.frame(GE_2017$Constituency.Name)
Con_Data_VS <- GE_2017_VS[,-1]
rownames(Con_Data_VS) <- GE_2017_VS[,1]
GE_2017_VSC <- GE_2017[,c(2,28:35)]
Con_Data_VSC <- GE_2017_VSC[,-1]
rownames(Con_Data_VSC) <- GE_2017_VSC[,1]
Constituencyinput <- 1
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
plot(IndCon_Data_VSC)
View(IndCon_Data_VSC)
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
View(IndCon_Data_VSC)
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- 1
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VS)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " " ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- 1
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VS)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
Constituencyinput <- 1
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
ylim_VSC)
max(ylim_VSC)
View(IndCon_Data_VSC)
for(i in 1:650){
Constituencyinput <- 1
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- 1
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
for(i in 1:650){
Constituencyinput <- 1
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- 1
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
Constituencyinput <- 1
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
Constituency
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
jpeg(paste(Constituency,"_VSC2017.jpeg")
plot(VSC_Plot)
dev.off()
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
dev.capabilities()
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
for(i in 1:650){
Constituencyinput <- 2
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
for(i in 1:650){
Constituencyinput <- 2
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
