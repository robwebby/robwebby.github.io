twitteR::getCurRateLimitInfo()
twitteR::searchTwitter('corbyn', n = 1000, lang = NULL, since = 28/02/2017, retryOnRateLimit = 180)
searchTwitter('corbyn', n = 1000, lang = NULL, since = 28/02/2017, retryOnRateLimit = 180)
Corbyn <- searchTwitter('corbyn', n = 1000, lang = NULL, since = "28/02/2017", retryOnRateLimit = 180)
Corbyn_df <- do.call("rbind", lapply(Corbyn, as.data.frame))
View(Corbyn_df)
library(twitteR)
library(ROAuth)
require(RCurl)
library(stringr)
library(tm)
library(ggmap)
library(dplyr)
library(plyr)
library(tm)
library(wordcloud)
library(twitteR)
library(ROAuth)
require(RCurl)
library(stringr)
library(tm)
install.packages("tm", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(tm)
library(ggmap)
library(dplyr)
library(plyr)
library(tm)
library(wordcloud)
install.packages("wordcloud", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
library(wordcloud)
corbyn_txt = sapply(Corbyn, function(x) x$getText())
corbyn_txt = sapply(Corbyn, function(x) x$getText())
corbyn_txt = gsub("(RT|via)((?:\\b\\W*@\\w+)+)", "", corbyn_txt)
corbyn_txt = gsub("@\\w+", "", corbyn_txt)
corbyn_txt = gsub("[[:punct:]]", "", corbyn_txt)
corbyn_txt = gsub("[[:digit:]]", "", corbyn_txt)
corbyn_txt = gsub("http\\w+", "", corbyn_txt)
corbyn_txt = gsub("[ \t]{2,}", "", corbyn_txt)
corbyn_txt = gsub("^\\s+|\\s+$", "", corbyn_txt)
try.error = function(x)
{
# create missing value
y = NA
# tryCatch error
try_error = tryCatch(tolower(x), error=function(e) e)
# if not an error
if (!inherits(try_error, "error"))
y = tolower(x)
# result
return(y)
}
corbyn_txt = sapply(corbyn_txt, try.error)
corbyn_txt = corbyn_txt[!is.na(corbyn_txt)]
names(corbyn_txt) = NULL
class_emo = classify_emotion(corbyn_txt, algorithm="bayes", prior=1.0)
library(sentimentr)
sentimentr::extract_sentiment_terms(corbyn_txt)
corb_sent extract_sentiment_terms(corbyn_txt)
Corbyn_sent_df <- do.call("rbind", lapply(corb_sent, as.data.frame))
corb_sent <- extract_sentiment_terms(corbyn_txt)
Corbyn_sent_df <- do.call("rbind", lapply(corb_sent, as.data.frame))
View(corb_sent)
install.packages("~/Downloads/sentiment_0.2.tar", repos = NULL, lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
install.packages("~/Downloads/sentiment_0.2.tar", repos = NULL)
install.packages("~/Downloads/sentiment_0.2.tar")
install.packages("~/Downloads/sentiment_0.2.tar", lib="/Library/Frameworks/R.framework/Versions/3.3/Resources/library")
View(Corbyn_df)
Corbyn <- searchTwitter('corbyn', n = 1000, lang = NULL, since = "28/02/2017", retryOnRateLimit = 180)
?searchTwitteR
Corbyn_df <- do.call("rbind", lapply(Corbyn, as.data.frame))
View(Corbyn_df)
?searchTwitter
Leicester_Tweets <- searchTwitter(geocode='52.6369,1.1398,5mi', n=1000)
Leicester_Tweets <- searchTwitter("",geocode='52.6369,1.1398,5mi', n=1000)
Leic_df <- do.call("rbind", lapply(Leicester_Tweets, as.data.frame))
View(Leic_df)
#Q6 - Incomplete, still need to double area
Q6A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3) #translate to origin
Q6B <- matrix(c(-0.95,0.32,0,-0.32,-0.95,0,0,0,1), nrow = 3, ncol = 3) #rotation
Q6C <- matrix(c(1,0,0,0,1,0,4.5,4,1), nrow = 3, ncol = 3) #move back
Q6Translation <- Q6C %*% (Q6B %*% Q6A) #multiply
Q6Translation
Q9altA <- matrix(c(-1,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #relection in x=0
Q9altB <- matrix(c(1,0,0,0,1,0,8.8,-2,1), nrow = 3, ncol = 3) #bottom left to point (2.8,0)
Q9altC <- matrix(c(0.71,0.71,0,-0.71,0.71,0,0,0,1), nrow = 3, ncol = 3) #rotate 45deg anti-clockwise
Q9altFinal <- Q9altC %*% (Q9altB %*% Q9altA)
Q9altFinal
Q9Translation
#Transformations Matric Calculations for Spatial Science Assignment
#Q1 - Finished
Q1 <- matrix(c(1,0,0,0,1,0,-4,-5,1), nrow = 3, ncol = 3)
#Q2 - Finished
Q2 <- matrix(c(-1,0,0,0,-1,0,0,0,1), nrow = 3, ncol = 3)
#Q3 - Finished? (check)
Q3 <- matrix(c(2,0,0,0,0.5,0,0,0,1), nrow = 3, ncol = 3)
#Q4 - Completed
Q4 <- matrix(c(0.22,0.97,0,-0.97,0.22,0,0,0,1), nrow = 3, ncol = 3)
#Q5 - Completed
Q5A <- matrix(c(1,0,0,0,1,0,-6,-2,1), nrow = 3, ncol = 3)
Q5B <- matrix(c(0.62,-0.62,0,0.62,0.62,0,0,0,1), nrow = 3, ncol = 3)
Q5C <- matrix(c(1,0,0,0,1,0,6,2,1), nrow = 3, ncol = 3)
Q5Translation <- Q5C %*% (Q5B %*% Q5A)
#Q6 - Incomplete, still need to double area
Q6A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3) #translate to origin
Q6B <- matrix(c(-0.95,0.32,0,-0.32,-0.95,0,0,0,1), nrow = 3, ncol = 3) #rotation
Q6C <- matrix(c(1,0,0,0,1,0,4.5,4,1), nrow = 3, ncol = 3) #move back
Q6Translation <- Q6C %*% (Q6B %*% Q6A) #multiply
#Q7 - Completed
Q7A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3)
Q7B <- matrix(c(-1,0,0,0,-1,0,0,0,1), nrow = 3, ncol = 3)
Q7C <- matrix(c(1,0,0,0,1,0,0,-0.5,1), nrow = 3, ncol = 3)
Q7Translation <- Q7C %*% (Q7B %*% Q7A)
#Q8 - Completed
Q8A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3) #to origin
Q8B <- matrix(c(0.5,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #Half Scale in x
Q8C <- matrix(c(1,0,0,0,1,0,0,4,1), nrow = 3, ncol = 3) #move up 4 in y
Q8rot <- matrix(c(-0.71,-0.71,0,0.71,-0.71,0,0,0,1), nrow = 3, ncol = 3) #Rotate 225deg anti-clockwise
Q8Translation <- Q8rot%*%(Q8C%*%(Q8B %*% Q8A))
#Q9 - Potentially the solution, looks about correct
Q9A <- matrix(c(-1,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #relection in x=0
Q9B <- matrix(c(1,0,0,0,1,0,4.5,-4,1), nrow = 3, ncol = 3) #to origin
Q9C <- matrix(c(0.71,0.71,0,-0.71,0.71,0,0,0,1), nrow = 3, ncol = 3) #rotate 45deg anti-clockwise
Q9D <- matrix(c(1,0,0,0,1,0,1.7,4.6,1), nrow = 3, ncol = 3) #across 1.7 in the x, 4.6 in y
Q9Translation <- Q9D %*% (Q9C %*% (Q9B %*% Q9A))
Q9altA <- matrix(c(-1,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #relection in x=0
Q9altB <- matrix(c(1,0,0,0,1,0,8.8,-2,1), nrow = 3, ncol = 3) #bottom left to point (2.8,0)
Q9altC <- matrix(c(0.71,0.71,0,-0.71,0.71,0,0,0,1), nrow = 3, ncol = 3) #rotate 45deg anti-clockwise
Q9altFinal <- Q9altC %*% (Q9altB %*% Q9altA)
Q8Translation
Q7Translation
Q6Translation
Q5Translation
Q4
#Q3 - Finished? (check)
Q3 <- matrix(c(2,0,0,0,0.5,0,0,0,1), nrow = 3, ncol = 3)
Q3
Q2
Q2A <- matrix(c(-1,0,0,1,0,0,0,0,1), nrow = 3, ncol = 3)
Q2B <- matrix(c(1,0,0,-1,0,0,0,0,1), nrow = 3, ncol = 3)
Q2F <- Q2B %*% Q2A
Q2F
Q2F <- Q2A %*% Q2B
Q2F
Q1
options(RCurlOptions = list(cainfo = system.file("CurlSSL", "cacert.pem", package = "RCurl")))
download.file(url="http://curl.haxx.se/ca/cacert.pem", destfile="cacert.pem")
reqURL <- "https://api.twitter.com/oauth/request_token"
accessURL <- "https://api.twitter.com/oauth/access_token"
authURL <- "https://api.twitter.com/oauth/authorize"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
library(ROAuth)
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
consumerKey <- "LTko3GJe2gUxrVSLlwE2DLV8w"
consumerSecret <- "9G7twTnUFkD3QGM8qcMLWkOVNrD2agiDxuFkWsVrMntY6v3sK8"
twitCred <- OAuthFactory$new(consumerKey=consumerKey,
consumerSecret=consumerSecret,
requestURL=reqURL,
accessURL=accessURL,
authURL=authURL)
twitCred$handshake()
registerTwitterOAuth(twitCred)
library(twitteR)
library(ROAuth)
library(RCurl)
registerTwitterOAuth(twitCred)
testSearch = searchTwitter("#food", n = 10, cainfo="cacert.pem")
?search_twitter_and_store
register_db_backend("sqlit_file")
install.packages("RSQLite")
register_db_backend("sqlit_file")
searchTwitter("",n = 25,geocode = '52.633333, -1.133333, 5mi')
library(twitteR)
consumer_key <- "LTko3GJe2gUxrVSLlwE2DLV8w"
consumer_secret <- "9G7twTnUFkD3QGM8qcMLWkOVNrD2agiDxuFkWsVrMntY6v3sK8"
access_token <- "118042021-qmKPBFrXB4vjNIwYNnzZBNlH54zJRf6h0fpOqgRh"
access_secret <- "1mvzHsNXngYzsbuAPvz30X4N0XViImxH9wxS7HK00b6GC"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
searchTwitter("",n = 25,geocode = '52.633333, -1.133333, 5mi')
?searchTwitter
searchTwitter("",n = 25,geocode ='52.633333,-1.133333,5mi')
Leic <- searchTwitter("",n = 25,geocode ='52.633333,-1.133333,5mi')
Leic_tweets.df <- twListToDF(Leic)
View(Leic_df)
Leic <- searchTwitter("",n = 25,geocode ='52.633333,-1.133333,5mi')
Leic_tweets.df <- twListToDF(Leic)
View(Leic_tweets.df)
Leic <- searchTwitter("",n = 250,geocode ='52.633333,-1.133333,5mi')
View(Leic_tweets.df)
View(Leic_tweets.df)
Leic <- searchTwitter("",n = 25,geocode ='52.633333,-1.133333,5mi')
Leic_tweets.df <- twListToDF(Leic)
Leic <- searchTwitter("",n = 250,geocode ='52.633333,-1.133333,5mi')
Leic_tweets.df <- twListToDF(Leic)
View(Leic_tweets.df)
Leic <- searchTwitter("",n = 250,geocode ='52.633333,-1.133333,2mi')
Leic_tweets.df <- twListToDF(Leic)
View(Leic_tweets.df)
library(dplyr)
my_db <- src_sqlite("my_db.sqlite3", create = T)
my_db <- src_sqlite("my_db.sqlite3", create = T)
?search_twitter_and_store
register_db_backend("my_db")
register_db_backend(my_db)
typeof(my_db)
?src_sqlite
?`dplyr-package`
?`dplyr`
?dplyr
browseVignettes(package = "dplyr"
)
my_db <- src_sqlite("my_db.sqlite3", create = T)
library(“RSQLite”)
library(RSQLite)
RSQLite::dbGetInfo(my_db)
library(dplyr)
library(ggplot2)
library(data.table)
year_start=2013
year_last=2015
for (i in year_start:year_last){
j=c(1:4)
for (m in j){
url1<-paste0("http://www.nber.org/fda/faers/",i,"/demo",i,"q",m,".csv.zip")
download.file(url1,dest="data.zip") # Demography
unzip ("data.zip")
url2<-paste0("http://www.nber.org/fda/faers/",i,"/drug",i,"q",m,".csv.zip")
download.file(url2,dest="data.zip")   # Drug
unzip ("data.zip")
url3<-paste0("http://www.nber.org/fda/faers/",i,"/reac",i,"q",m,".csv.zip")
download.file(url3,dest="data.zip") # Reaction
unzip ("data.zip")
url4<-paste0("http://www.nber.org/fda/faers/",i,"/outc",i,"q",m,".csv.zip")
download.file(url4,dest="data.zip") # Outcome
unzip ("data.zip")
url5<-paste0("http://www.nber.org/fda/faers/",i,"/indi",i,"q",m,".csv.zip")
download.file(url5,dest="data.zip") # Indication for use
unzip ("data.zip")
}
}
filenames <- list.files(pattern="^demo.*.csv", full.names=TRUE)
demo=lapply(filenames,fread)
demography=do.call(rbind,lapply(1:length(demo), function(i)
select(as.data.frame(demo[i]),primaryid,caseid,
age,age_cod,event_dt,sex,wt,wt_cod, occr_country)))
str(demography)
filenames <- list.files(pattern="^drug.*.csv", full.names=TRUE)
drug_list=lapply(filenames,fread)
drug=do.call(rbind,lapply(1:length(drug_list), function(i)
select(as.data.frame(drug_list[i]),primaryid,drug_seq,drugname,route)))
str(drug)
filenames <- list.files(pattern="^indi.*.csv", full.names=TRUE)
indi=lapply(filenames,fread)
indication=do.call(rbind,lapply(1:length(indi), function(i)
select(as.data.frame(indi[i]),primaryid,indi_drug_seq,indi_pt)))
str(indication)
filenames <- list.files(pattern="^outc.*.csv", full.names=TRUE)
outc=lapply(filenames,fread)
outcome=do.call(rbind,lapply(1:length(outc), function(i)
select(as.data.frame(outc[i]),primaryid,outc_cod)))
str(outcome)
filenames <- list.files(pattern="^reac.*.csv", full.names=TRUE)
reac=lapply(filenames,fread)
reaction=do.call(rbind,lapply(1:length(reac), function(i)
select(as.data.frame(reac[i]),primaryid,pt)))
str(reaction)
my_database<- src_sqlite("adverse_events", create = TRUE) # create =TRUE creates a new database
copy_to(my_database,demography,temporary = FALSE) # uploading demography data
copy_to(my_database,drug,temporary = FALSE)       # uploading drug data
copy_to(my_database,indication,temporary = FALSE) # uploading indication data
my_db <- src_sqlite("adverse_events", create = FALSE)
# create is false now because I am connecting to an existing database
#
copy_to(my_database,reaction,temporary = FALSE)   # uploading reaction data
copy_to(my_database,outcome,temporary = FALSE)     #uploading outcome data
my_db <- src_sqlite("adverse_events", create = FALSE)
# create is false now because I am connecting to an existing database
src_tbls(my_db)
demography = tbl(my_db,"demography" )
US = filter(demography, occr_country=='US')  # Filtering demography of patients from the US
gh
library(twitteR)
consumer_key <- "LTko3GJe2gUxrVSLlwE2DLV8w"
consumer_secret <- "9G7twTnUFkD3QGM8qcMLWkOVNrD2agiDxuFkWsVrMntY6v3sK8"
access_token <- "118042021-qmKPBFrXB4vjNIwYNnzZBNlH54zJRf6h0fpOqgRh"
access_secret <- "1mvzHsNXngYzsbuAPvz30X4N0XViImxH9wxS7HK00b6GC"
setup_twitter_oauth(consumer_key, consumer_secret, access_token, access_secret)
Leic <- searchTwitter("",n = 2000,geocode ='52.633333,-1.133333,5mi')
Leic_tweets.df <- twListToDF(Leic)
View(Leic_tweets.df)
Leic <- searchTwitter("battlefield line",n = 20)
Leic_tweets.df <- twListToDF(Leic)
View(Leic_tweets.df)
Leic <- searchTwitter(c("battlefield", "line"),n = 20)
Leic <- searchTwitter("'battlefield line'",n = 20)
View(Leic_tweets.df)
?search_twitter_and_store
search_twitter_and_store('manchester gorton' OR 'manchester gorton byelection' OR 'manchester gorton election', table_name ="gorton_tweets",locale = NULL, geocode = NULL )
search_twitter_and_store('manchester gorton', table_name ="gorton_tweets",locale = NULL, geocode = NULL )
A <- sinpi(45)
A <- sinpi(90)
?sinpi
sin(45)
cos(45)
cospi(45)
cosh(45)
rad <- 0.0174532925
sin(45*rad)
Q4 <- matrix(c(cos(77*rad),sin(77*rad),0,-cos(77*rad),cos(77*rad),0,0,0,1), nrow = 3, ncol = 3)
Q4
Q4 <- matrix(c(cos(77*rad),sin(77*rad),0,cos(77*rad),cos(77*rad),0,0,0,1), nrow = 3, ncol = 3)
Q4
#Q4 - Completed
Q4 <- matrix(c(cos(77*rad),sin(77*rad),0,-sin(77*rad),cos(77*rad),0,0,0,1), nrow = 3, ncol = 3) #rotate 77deg anticlockwise
Q4
sin(-52*rad)
sin(308*rad)
cos(-52*rad)
Q5B <- matrix(c(cos(-52*rad),-sin(-52*rad),0,sin(-52*rad),cos(-52*rad),0,0,0,1), nrow = 3, ncol = 3)
Q5A <- matrix(c(1,0,0,0,1,0,-6,-2,1), nrow = 3, ncol = 3)
Q5B <- matrix(c(cos(-52*rad),-sin(-52*rad),0,sin(-52*rad),cos(-52*rad),0,0,0,1), nrow = 3, ncol = 3)
Q5C <- matrix(c(1,0,0,0,1,0,6,2,1), nrow = 3, ncol = 3)
Q5Translation <- Q5C %*% (Q5B %*% Q5A)
Q5Translation
Q5B <- matrix(c(cos(52*rad),-sin(52*rad),0,sin(52*rad),cos(52*rad),0,0,0,1), nrow = 3, ncol = 3)
Q5Translation
Q5Translation <- Q5C %*% (Q5B %*% Q5A)
Q5Translation
cos(161*rad)
Q6B <- matrix(c(cos(161*rad),sin(161*rad),0,-sin(161*rad),cos(161*rad),0,0,0,1), nrow = 3, ncol = 3) #rotation
#Q6 - Incomplete, still need to double area
Q6A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3) #translate to origin
Q6B <- matrix(c(cos(161*rad),sin(161*rad),0,-sin(161*rad),cos(161*rad),0,0,0,1), nrow = 3, ncol = 3) #rotation
Q6C <- matrix(c(1,0,0,0,1,0,4.5,4,1), nrow = 3, ncol = 3) #move back
Q6Translation <- Q6C %*% (Q6B %*% Q6A) #multiply
Q6Translation
#Q6 - Incomplete, still need to double area
Q6A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3) #translate to origin
Q6B <- matrix(c(cos(161*rad),sin(161*rad),0,-sin(161*rad),cos(161*rad),0,0,0,1), nrow = 3, ncol = 3) #rotation
Q6C <- matrix(c(1,0,0,0,1,0,4.5,4,1), nrow = 3, ncol = 3) #move back
Q6D <- matrix(c(2,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #Double Area
Q6Translation <- Q6D %*% (Q6C %*% (Q6B %*% Q6A)) #multiply
Q6Translation
(Q6C %*% (Q6B %*% Q6A)) #multiply
#Q6 - Incomplete, still need to double area
Q6A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3) #translate to origin
Q6B <- matrix(c(cos(161*rad),sin(161*rad),0,-sin(161*rad),cos(161*rad),0,0,0,1), nrow = 3, ncol = 3) #rotation 161 anti
Q6C <- matrix(c(1,0,0,0,1,0,4.5,4,1), nrow = 3, ncol = 3) #move back to orig
Q6D <- matrix(c(2,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #Double Area
Q6Translation <- Q6D %*% (Q6C %*% (Q6B %*% Q6A)) #multiply and final matrix
cos(225*rad)
#Q8 - Completed
Q8A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3) #to origin
Q8B <- matrix(c(0.5,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #Half Scale in x
Q8C <- matrix(c(1,0,0,0,1,0,0,4,1), nrow = 3, ncol = 3) #move up 4 in y
Q8rot <- matrix(c(cos(225*rad),sin(225*rad),0,-sin(225*rad),cos(225*rad),0,0,0,1), nrow = 3, ncol = 3) #Rotate 225deg anti-clockwise
Q8Translation <- Q8rot%*%(Q8C%*%(Q8B %*% Q8A))
Q8Translation
Q9altA <- matrix(c(-1,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #relection in x=0
Q9altB <- matrix(c(1,0,0,0,1,0,8.8,-2,1), nrow = 3, ncol = 3) #bottom left to point (2.8,0)
Q9altC <- matrix(c(cos(45*rad),sin(45*rad),0,-sin(45*rad),cos(45),0,0,0,1), nrow = 3, ncol = 3) #rotate 45deg anti-clockwise
Q9altFinal <- Q9altC %*% (Q9altB %*% Q9altA)
Q9altFinal
#Q9 - Potentially the solution, looks about correct
Q9oldA <- matrix(c(-1,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #relection in x=0
Q9oldB <- matrix(c(1,0,0,0,1,0,4.5,-4,1), nrow = 3, ncol = 3) #to origin
Q9oldC <- matrix(c(0.71,0.71,0,-0.71,0.71,0,0,0,1), nrow = 3, ncol = 3) #rotate 45deg anti-clockwise
Q9oldD <- matrix(c(1,0,0,0,1,0,1.7,4.6,1), nrow = 3, ncol = 3) #across 1.7 in the x, 4.6 in y
Q9oldTranslation <- Q9oldD %*% (Q9oldC %*% (Q9oldB %*% Q9oldA))
Q9A <- matrix(c(-1,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #relection in x=0
Q9B <- matrix(c(1,0,0,0,1,0,8.8,-2,1), nrow = 3, ncol = 3) #bottom left to point (2.8,0)
Q9C <- matrix(c(cos(45*rad),sin(45*rad),0,-sin(45*rad),cos(45),0,0,0,1), nrow = 3, ncol = 3) #rotate 45deg anti-clockwise
Q9Final <- Q9C %*% (Q9B %*% Q9A)
Q9Final
#Transformations Matric Calculations for Spatial Science Assignment
#as R works in radians and not degrees a value as assigned to allow conversion between them within a calculation, so if sin(45) is required it will be used as: sin(45*rad).
rad <- 0.0174532925
#Q1 - Finished
Q1 <- matrix(c(1,0,0,0,1,0,-4,-5,1), nrow = 3, ncol = 3)
#Q2 - Finished
Q2 <- matrix(c(-1,0,0,0,-1,0,0,0,1), nrow = 3, ncol = 3)
#Q3 - Finished?
Q3 <- matrix(c(2,0,0,0,0.5,0,0,0,1), nrow = 3, ncol = 3)
#Q4 - Completed
Q4 <- matrix(c(cos(77*rad),sin(77*rad),0,-sin(77*rad),cos(77*rad),0,0,0,1), nrow = 3, ncol = 3) #rotate 77deg anticlockwise
#Q5 - Completed
Q5A <- matrix(c(1,0,0,0,1,0,-6,-2,1), nrow = 3, ncol = 3) #moves bottom right to origin
Q5B <- matrix(c(cos(-52*rad),-sin(-52*rad),0,sin(-52*rad),cos(-52*rad),0,0,0,1), nrow = 3, ncol = 3) #rotates 52deg clockwise
Q5C <- matrix(c(1,0,0,0,1,0,6,2,1), nrow = 3, ncol = 3) #moves back
Q5Translation <- Q5C %*% (Q5B %*% Q5A) #multiply and final matrix
#Q6 - Completed
Q6A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3) #translate to origin
Q6B <- matrix(c(cos(161*rad),sin(161*rad),0,-sin(161*rad),cos(161*rad),0,0,0,1), nrow = 3, ncol = 3) #rotation 161 anti
Q6C <- matrix(c(1,0,0,0,1,0,4.5,4,1), nrow = 3, ncol = 3) #move back to orig
Q6D <- matrix(c(2,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #Double Area
Q6Translation <- Q6D %*% (Q6C %*% (Q6B %*% Q6A)) #multiply and final matrix
#Q7 - Completed
Q7A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3) #Move to origin
Q7B <- matrix(c(-1,0,0,0,-1,0,0,0,1), nrow = 3, ncol = 3) #reflect in both axis
Q7C <- matrix(c(1,0,0,0,1,0,0,-0.5,1), nrow = 3, ncol = 3) #move -0.5 in y axis
Q7Translation <- Q7C %*% (Q7B %*% Q7A) #multiply and final matrix
#Q8 - Completed
Q8A <- matrix(c(1,0,0,0,1,0,-4.5,-4,1), nrow = 3, ncol = 3) #to origin
Q8B <- matrix(c(0.5,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #Half Scale in x
Q8C <- matrix(c(1,0,0,0,1,0,0,4,1), nrow = 3, ncol = 3) #move up 4 in y
Q8rot <- matrix(c(cos(225*rad),sin(225*rad),0,-sin(225*rad),cos(225*rad),0,0,0,1), nrow = 3, ncol = 3) #Rotate 225deg anti-clockwise
Q8Translation <- Q8rot%*%(Q8C%*%(Q8B %*% Q8A))
#Q9 - Potentially the solution, looks about correct
Q9A <- matrix(c(-1,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #relection in x=0
Q9B <- matrix(c(1,0,0,0,1,0,8.8,-2,1), nrow = 3, ncol = 3) #bottom left to point (2.8,0)
Q9C <- matrix(c(cos(45*rad),sin(45*rad),0,-sin(45*rad),cos(45),0,0,0,1), nrow = 3, ncol = 3) #rotate 45deg anti-clockwise
Q9Translation <- Q9C %*% (Q9B %*% Q9A)
Q4
Q5
Q5Translation
Q6Translation
Q7
Q7Translation
Q8Translation
Q9Translation
Q5B <- matrix(c(cos(52*rad),-sin(52*rad),0,sin(52*rad),cos(52*rad),0,0,0,1), nrow = 3, ncol = 3) #rotates 52deg clockwise
#Q5 - Completed
Q5A <- matrix(c(1,0,0,0,1,0,-6,-2,1), nrow = 3, ncol = 3) #moves bottom right to origin
Q5B <- matrix(c(cos(52*rad),-sin(52*rad),0,sin(52*rad),cos(52*rad),0,0,0,1), nrow = 3, ncol = 3) #rotates 52deg clockwise
Q5C <- matrix(c(1,0,0,0,1,0,6,2,1), nrow = 3, ncol = 3) #moves back
Q5Translation <- Q5C %*% (Q5B %*% Q5A) #multiply and final matrix
Q5Translation
#Q5 - Completed
Q5A <- matrix(c(1,0,0,0,1,0,-6,-2,1), nrow = 3, ncol = 3) #moves bottom right to origin
Q5B <- matrix(c(cos(-52*rad),-sin(-52*rad),0,sin(-52*rad),cos(-52*rad),0,0,0,1), nrow = 3, ncol = 3) #rotates 52deg clockwise
Q5C <- matrix(c(1,0,0,0,1,0,6,2,1), nrow = 3, ncol = 3) #moves back
Q5Translation <- Q5C %*% (Q5B %*% Q5A) #multiply and final matrix
Q5Translation
#Q5 - Completed
Q5A <- matrix(c(1,0,0,0,1,0,-6,-2,1), nrow = 3, ncol = 3) #moves bottom right to origin
Q5B <- matrix(c(cos(-52*rad),sin(-52*rad),0,-sin(-52*rad),cos(-52*rad),0,0,0,1), nrow = 3, ncol = 3) #rotates 52deg clockwise
Q5C <- matrix(c(1,0,0,0,1,0,6,2,1), nrow = 3, ncol = 3) #moves back
Q5Translation <- Q5C %*% (Q5B %*% Q5A) #multiply and final matrix
Q5Translation
#Q8alt - Completed
Q8altA <- matrix(c(1,0,0,0,1,0,-4.5,0,1), nrow = 3, ncol = 3) #to origin
Q8altB <- matrix(c(0.5,0,0,0,1,0,0,0,1), nrow = 3, ncol = 3) #Half Scale in x
Q8altrot <- matrix(c(cos(225*rad),sin(225*rad),0,-sin(225*rad),cos(225*rad),0,0,0,1), nrow = 3, ncol = 3) #Rotate 225deg anti-clockwise
Q8altTranslation <- Q8altrot%*%(Q8LTB %*% Q8ltA)
Q8altTranslation <- Q8altrot%*%(Q8altB %*% Q8ltA)
Q8altTranslation <- Q8altrot%*%(Q8altB %*% Q8altA)
Q8altTranslation
load("~/OneDrive - University of Leicester/Spatial Science/Assignment 2/.RData")
setwd("~/Documents/GitHub/robwebby.github.io")
GE_2017 <- read.csv("GE2017_Results.csv")
Party_Names <- c("Con","Green","Labour","Lib Dem","Other","Plaid","SNP","UKIP")
GE_2017_VS <- GE_2017[,c(2,20:27)]
Con_Names <- as.data.frame(GE_2017$Constituency.Name)
Con_Data_VS <- GE_2017_VS[,-1]
rownames(Con_Data_VS) <- GE_2017_VS[,1]
GE_2017_VSC <- GE_2017[,c(2,28:35)]
Con_Data_VSC <- GE_2017_VSC[,-1]
rownames(Con_Data_VSC) <- GE_2017_VSC[,1]
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- 2
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
setwd("~/Documents/GitHub/robwebby.github.io/2017_VSC_Plots")
for(i in 1:650){
Constituencyinput <- i
IndCon_Data_VSC <- Con_Data_VSC[Constituencyinput,]
IndCon_Data_VSC <- as.matrix.data.frame(IndCon_Data_VSC)
ylim_VSC <- c(min(t(IndCon_Data_VSC)),max(t(IndCon_Data_VSC)))
Constituency <- as.character(Con_Names[Constituencyinput,])
if (max(ylim_VSC)<=0) {
print(paste(Constituency,"Not Called", sep = ""))
IndCon_Data_VSC[1,] <- c(0,0,0,0,0,0,0,0)
VSC_Plot <- barplot(IndCon_Data_VSC, main= paste(Constituency,"NOT CALLED",sep = " ") ,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = c(-10,10), cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356)
}
else{
# Render a barplot
VSC_Plot <- barplot(IndCon_Data_VSC, main= Constituency,
col=c("darkblue","green","red","gold","grey","darkgreen","yellow","purple"), beside=TRUE, names.arg = Party_Names, ylim = ylim_VSC, cex.sub = 1, font.sub = 4
,las=2)
dev.print(png, paste(Constituency,"_VSC2017.png", sep = ""), width = 448, height = 356) }}
